apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "kafka-chats.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "kafka-chats.name" . }}
    helm.sh/chart: {{ include "kafka-chats.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
data:
  start-kafka.sh: |+
    #!/bin/bash

    HOSTNAME="$(hostname -s)"
    if [[ $HOSTNAME =~ (.*)-([0-9]+)$ ]]; then
      ORD=${BASH_REMATCH[2]}
      sed -i 's/{{broker_id}}/$((ORD))/' $KAFKA_HOME/config/server.properties
    else
      echo "Failed to get index from hostname $HOSTNAME"
      exit 1
    fi
    $KAFKA_HOME/bin/kafka-server-start.sh $KAFKA_HOME/config/server.properties

  server.properties: |
    # Licensed to the Apache Software Foundation (ASF) under one or more
    # contributor license agreements.  See the NOTICE file distributed with
    # this work for additional information regarding copyright ownership.
    # The ASF licenses this file to You under the Apache License, Version 2.0
    # (the "License"); you may not use this file except in compliance with
    # the License.  You may obtain a copy of the License at
    #
    #    http://www.apache.org/licenses/LICENSE-2.0
    #
    # Unless required by applicable law or agreed to in writing, software
    # distributed under the License is distributed on an "AS IS" BASIS,
    # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    # See the License for the specific language governing permissions and
    # limitations under the License.

    #
    # This configuration file is intended for use in ZK-based mode, where Apache ZooKeeper is required.
    # See kafka.server.KafkaConfig for additional details and defaults
    #

    ############################# Server Basics #############################

    # The id of the broker. This must be set to a unique integer for each broker.
    broker.id={{broker_id}}

    ############################# Socket Server Settings #############################

    # The address the socket server listens on. If not configured, the host name will be equal to the value of
    # java.net.InetAddress.getCanonicalHostName(), with PLAINTEXT listener name, and port 9092.
    #   FORMAT:
    #     listeners = listener_name://host_name:port
    #   EXAMPLE:
    #     listeners = PLAINTEXT://your.host.name:9092
    # listeners=PLAINTEXT://{{ include "kafka-chats.fullname" . }}:9092

    # Listener name, hostname and port the broker will advertise to clients.
    # If not set, it uses the value for "listeners".
    # advertised.listeners=PLAINTEXT://{{ include "kafka-chats.fullname" . }}:9092
    listener.security.protocol.map=INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
    inter.broker.listener.name=INSIDE
    listeners=INSIDE://my-kafka-kafka-chats-0:9092,OUTSIDE://my-kafka-kafka-chats-0:9094
    advertised.listeners=INSIDE://my-kafka-kafka-chats-0:9092,OUTSIDE://node1:32452

    # Maps listener names to security protocols, the default is for them to be the same. See the config documentation for more details
    #listener.security.protocol.map=PLAINTEXT:PLAINTEXT,SSL:SSL,SASL_PLAINTEXT:SASL_PLAINTEXT,SASL_SSL:SASL_SSL

    # The number of threads that the server uses for receiving requests from the network and sending responses to the network
    num.network.threads=3

    # The number of threads that the server uses for processing requests, which may include disk I/O
    num.io.threads=8

    # The send buffer (SO_SNDBUF) used by the socket server
    socket.send.buffer.bytes=102400

    # The receive buffer (SO_RCVBUF) used by the socket server
    socket.receive.buffer.bytes=102400

    # The maximum size of a request that the socket server will accept (protection against OOM)
    socket.request.max.bytes=104857600


    ############################# Log Basics #############################

    # A comma separated list of directories under which to store log files
    log.dirs=/tmp/kafka-logs

    # The default number of log partitions per topic. More partitions allow greater
    # parallelism for consumption, but this will also result in more files across
    # the brokers.
    num.partitions=1

    # The number of threads per data directory to be used for log recovery at startup and flushing at shutdown.
    # This value is recommended to be increased for installations with data dirs located in RAID array.
    num.recovery.threads.per.data.dir=1

    ############################# Internal Topic Settings  #############################
    # The replication factor for the group metadata internal topics "__consumer_offsets" and "__transaction_state"
    # For anything other than development testing, a value greater than 1 is recommended to ensure availability such as 3.
    offsets.topic.replication.factor=1
    transaction.state.log.replication.factor=1
    transaction.state.log.min.isr=1

    ############################# Log Flush Policy #############################

    # Messages are immediately written to the filesystem but by default we only fsync() to sync
    # the OS cache lazily. The following configurations control the flush of data to disk.
    # There are a few important trade-offs here:
    #    1. Durability: Unflushed data may be lost if you are not using replication.
    #    2. Latency: Very large flush intervals may lead to latency spikes when the flush does occur as there will be a lot of data to flush.
    #    3. Throughput: The flush is generally the most expensive operation, and a small flush interval may lead to excessive seeks.
    # The settings below allow one to configure the flush policy to flush data after a period of time or
    # every N messages (or both). This can be done globally and overridden on a per-topic basis.

    # The number of messages to accept before forcing a flush of data to disk
    #log.flush.interval.messages=10000

    # The maximum amount of time a message can sit in a log before we force a flush
    #log.flush.interval.ms=1000

    ############################# Log Retention Policy #############################

    # The following configurations control the disposal of log segments. The policy can
    # be set to delete segments after a period of time, or after a given size has accumulated.
    # A segment will be deleted whenever *either* of these criteria are met. Deletion always happens
    # from the end of the log.

    # The minimum age of a log file to be eligible for deletion due to age
    log.retention.hours=168

    # A size-based retention policy for logs. Segments are pruned from the log unless the remaining
    # segments drop below log.retention.bytes. Functions independently of log.retention.hours.
    #log.retention.bytes=1073741824

    # The maximum size of a log segment file. When this size is reached a new log segment will be created.
    #log.segment.bytes=1073741824

    # The interval at which log segments are checked to see if they can be deleted according
    # to the retention policies
    log.retention.check.interval.ms=300000

    ############################# Zookeeper #############################

    # Zookeeper connection string (see zookeeper docs for details).
    # This is a comma separated host:port pairs, each corresponding to a zk
    # server. e.g. "127.0.0.1:3000,127.0.0.1:3001,127.0.0.1:3002".
    # You can also append an optional chroot string to the urls to specify the
    # root directory for all kafka znodes.
    zookeeper.connect=zk-cs:2181

    # Timeout in ms for connecting to zookeeper
    zookeeper.connection.timeout.ms=18000


    ############################# Group Coordinator Settings #############################

    # The following configuration specifies the time, in milliseconds, that the GroupCoordinator will delay the initial consumer rebalance.
    # The rebalance will be further delayed by the value of group.initial.rebalance.delay.ms as new members join the group, up to a maximum of max.poll.interval.ms.
    # The default value for this is 3 seconds.
    # We override this to 0 here as it makes for a better out-of-the-box experience for development and testing.
    # However, in production environments the default value of 3 seconds is more suitable as this will help to avoid unnecessary, and potentially expensive, rebalances during application startup.
    group.initial.rebalance.delay.ms=0

  application.conf: |
    # Copyright 2015 Yahoo Inc. Licensed under the Apache License, Version 2.0
    # See accompanying LICENSE file.

    # This is the main configuration file for the application.
    # ~~~~~

    # Secret key
    # ~~~~~
    # The secret key is used to secure cryptographics functions.
    # If you deploy your application to several instances be sure to use the same key!
    play.crypto.secret="^<csmm5Fx4d=r2HEX8pelM3iBkFVv?k[mc;IZE<_Qoq8EkX_/7@Zt6dP05Pzea3U"
    play.crypto.secret=${?APPLICATION_SECRET}
    play.http.session.maxAge="1h"

    # The application languages
    # ~~~~~
    play.i18n.langs=["en"]

    play.http.requestHandler = "play.http.DefaultHttpRequestHandler"
    play.http.context = "/"
    play.application.loader=loader.KafkaManagerLoader

    # Settings prefixed with 'kafka-manager.' will be deprecated, use 'cmak.' instead.
    # https://github.com/yahoo/CMAK/issues/713
    kafka-manager.zkhosts="zk-cs:2181"
    kafka-manager.zkhosts=${?ZK_HOSTS}
    cmak.zkhosts="zk-cs:2181"
    cmak.zkhosts=${?ZK_HOSTS}

    pinned-dispatcher.type="PinnedDispatcher"
    pinned-dispatcher.executor="thread-pool-executor"
    application.features=["KMClusterManagerFeature","KMTopicManagerFeature","KMPreferredReplicaElectionFeature","KMReassignPartitionsFeature", "KMScheduleLeaderElectionFeature"]

    akka {
      loggers = ["akka.event.slf4j.Slf4jLogger"]
      loglevel = "INFO"
    }

    akka.logger-startup-timeout = 60s

    basicAuthentication.enabled=false
    basicAuthentication.enabled=${?KAFKA_MANAGER_AUTH_ENABLED}

    basicAuthentication.ldap.enabled=false
    basicAuthentication.ldap.enabled=${?KAFKA_MANAGER_LDAP_ENABLED}
    basicAuthentication.ldap.server=""
    basicAuthentication.ldap.server=${?KAFKA_MANAGER_LDAP_SERVER}
    basicAuthentication.ldap.port=389
    basicAuthentication.ldap.port=${?KAFKA_MANAGER_LDAP_PORT}
    basicAuthentication.ldap.username=""
    basicAuthentication.ldap.username=${?KAFKA_MANAGER_LDAP_USERNAME}
    basicAuthentication.ldap.password=""
    basicAuthentication.ldap.password=${?KAFKA_MANAGER_LDAP_PASSWORD}
    basicAuthentication.ldap.search-base-dn=""
    basicAuthentication.ldap.search-base-dn=${?KAFKA_MANAGER_LDAP_SEARCH_BASE_DN}
    basicAuthentication.ldap.search-filter="(uid=$capturedLogin$)"
    basicAuthentication.ldap.search-filter=${?KAFKA_MANAGER_LDAP_SEARCH_FILTER}
    basicAuthentication.ldap.group-filter=""
    basicAuthentication.ldap.group-filter=${?KAFKA_MANAGER_LDAP_GROUP_FILTER}
    basicAuthentication.ldap.connection-pool-size=10
    basicAuthentication.ldap.connection-pool-size=${?KAFKA_MANAGER_LDAP_CONNECTION_POOL_SIZE}
    basicAuthentication.ldap.ssl=false
    basicAuthentication.ldap.ssl=${?KAFKA_MANAGER_LDAP_SSL}
    basicAuthentication.ldap.ssl-trust-all=false
    basicAuthentication.ldap.ssl-trust-all=${?KAFKA_MANAGER_LDAP_SSL_TRUST_ALL}

    basicAuthentication.username="admin"
    basicAuthentication.username=${?KAFKA_MANAGER_USERNAME}
    basicAuthentication.password="password"
    basicAuthentication.password=${?KAFKA_MANAGER_PASSWORD}

    basicAuthentication.realm="Kafka-Manager"
    basicAuthentication.excluded=["/api/health"] # ping the health of your instance without authentification

    kafka-manager.consumer.properties.file=${?CONSUMER_PROPERTIES_FILE}
