apiVersion: v1
kind: Service
metadata:
  name: zk-hs
  labels:
    app: zk
spec:
  ports:
  - port: 2888
    name: server
  - port: 3888
    name: leader-election
  clusterIP: None
  selector:
    app: zk
---
apiVersion: v1
kind: Service
metadata:
  name: zk-cs
  labels:
    app: zk
spec:
  ports:
  - port: 2181
    name: client
  selector:
    app: zk
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: zk-pdb
spec:
  selector:
    matchLabels:
      app: zk
  maxUnavailable: 1
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: zk-cm
  labels:
    app: zk
data:
  zoo.cfg: |+
    tickTime=2000
    dataDir=/opt/zookeeper/data/
    clientPort=2181
    initLimit=5
    syncLimit=2

  start.sh: |+
    #!/bin/bash
    set -e
    HOSTNAME="$(hostname -s)"
    if [[ $HOSTNAME =~ (.*)-([0-9]+)$ ]]; then
      ORD=${BASH_REMATCH[2]}
      echo "$((ORD + 1 ))" > /opt/zookeeper/data/myid
      export ZOO_SERVER_ID="$((ORD + 1 ))"
    else
      echo "Failed to get index from hostname $HOSTNAME"
      exit 1
    fi

    for i in {1..${REPLICA_COUNT}};
      do echo "server."${ZOO_SERVER_ID}"="${POD_NAME}"-"${i}"."${SVC_NAME}"."${NAMESPACE}".svc.cluster.local:2888:3888" >> /opt/zookeeper/conf/zoo.cfg;
    done

    /opt/zookeeper/bin/zkServer.sh start-foreground

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: zk
spec:
  selector:
    matchLabels:
      app: zk
  serviceName: zk-hs
  replicas: 3
  updateStrategy:
    type: RollingUpdate
  podManagementPolicy: OrderedReady
  template:
    metadata:
      labels:
        app: zk
    spec:
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: "app"
                    operator: In
                    values:
                    - zk
              topologyKey: "kubernetes.io/hostname"
      containers:
      - name: kubernetes-zookeeper
        imagePullPolicy: IfNotPresent
        image: "qtdocker/zookeeper:3.9.0"
        command: ["/bin/bash", "-c", "/opt/start.sh"]
        env:
        - name: REPLICA_COUNT
          value: "3"
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: SVC_NAME
          value: "zk-cs"
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        resources:
          requests:
            memory: "1Gi"
            cpu: "0.5"
        readinessProbe:
          exec:
            command:
            - sh
            - -c
            - "zookeeper-ready 2181"
          initialDelaySeconds: 10
          timeoutSeconds: 5
        livenessProbe:
          exec:
            command:
            - sh
            - -c
            - "zookeeper-ready 2181"
          initialDelaySeconds: 10
          timeoutSeconds: 5
        volumeMounts:
        - name: datadir
          mountPath: /opt/zookeeper/data
        - name: start-sh
          mountPath: /opt/start.sh
          subPath: start.sh
        - name: zoo-config
          mountPath: /opt/zookeeper/conf/zoo.cfg
          subPath: zoo.cfg
          readOnly: false
      volumes:
        - name: datadir
          hostPath:
            path: /opt/zookepper/data
        - name: start-sh
          configMap:
            name: zk-cm
            defaultMode: 511
        - name: zoo-config
          configMap:
            name: zk-cm
            defaultMode: 511
