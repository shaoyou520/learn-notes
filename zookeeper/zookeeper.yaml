apiVersion: v1
kind: Service
metadata:
  name: zk-hs
  labels:
    app: zk
spec:
  ports:
  - port: 2888
    name: server
  - port: 3888
    name: leader-election
  clusterIP: None
  selector:
    app: zk
---
apiVersion: v1
kind: Service
metadata:
  name: zk-cs
  labels:
    app: zk
spec:
  type: NodePort
  ports:
  - port: 2181
    name: client
    nodePort: 32181
  selector:
    app: zk
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: zk-pdb
spec:
  selector:
    matchLabels:
      app: zk
  maxUnavailable: 1
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: zk-cm
  labels:
    app: zk
data:
  zoo.cfg: |+
    tickTime=2000
    dataDir=/opt/zookeeper/data/
    clientPort=2181
    initLimit=5
    syncLimit=2
    server.1=zk-0.zk-hs.default.svc.cluster.local:2888:3888
    server.2=zk-1.zk-hs.default.svc.cluster.local:2888:3888
    server.3=zk-2.zk-hs.default.svc.cluster.local:2888:3888

  start.sh: |+
    #!/bin/bash
    set -e

    if [ ! -f "/opt/zookeeper/data/myid" ]; then
      HOSTNAME="$(hostname -s)"
      if [[ $HOSTNAME =~ (.*)-([0-9]+)$ ]]; then
        ORD=${BASH_REMATCH[2]}
        echo "$((ORD + 1 ))" > /opt/zookeeper/data/myid
        export ZOO_SERVER_ID="$((ORD + 1 ))"
      else
        echo "Failed to get index from hostname $HOSTNAME"
        exit 1
      fi
    fi

    /opt/zookeeper/bin/zkServer.sh start-foreground

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: zk
spec:
  selector:
    matchLabels:
      app: zk
  serviceName: zk-hs
  replicas: 3
  updateStrategy:
    type: RollingUpdate
  podManagementPolicy: OrderedReady
  template:
    metadata:
      labels:
        app: zk
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: "app"
                    operator: In
                    values:
                    - zk
              topologyKey: "kubernetes.io/hostname"
      containers:
      - name: kubernetes-zookeeper
        imagePullPolicy: IfNotPresent
        image: "qtdocker/zookeeper:3.9.0"
        command: ["/bin/bash", "-c", "/opt/start.sh"]
        resources:
          requests:
            memory: "1Gi"
            cpu: "0.5"
        livenessProbe:
          tcpSocket:
            port: 2181
          initialDelaySeconds: 100
          timeoutSeconds: 5
        volumeMounts:
        - name: datadir
          mountPath: /opt/zookeeper/data
        - name: start-sh
          mountPath: /opt/start.sh
          subPath: start.sh
        - name: zoo-config
          mountPath: /opt/zookeeper/conf/zoo.cfg
          subPath: zoo.cfg
          readOnly: false
      volumes:
        - name: datadir
          hostPath:
            path: /opt/zookepper/data
        - name: start-sh
          configMap:
            name: zk-cm
            defaultMode: 511
        - name: zoo-config
          configMap:
            name: zk-cm
            defaultMode: 511

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: zk-ingress
spec:
  ingressClassName: nginx
  rules:
    - host: zk.shaoyou.store
      http:
        paths:
          - pathType: Prefix
            path: "/"
            backend:
              service:
                name: zk-cs
                port:
                  number: 2181