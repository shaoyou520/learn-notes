# /usr/lib/systemd/system/kubelet.service
[Unit]
Description=Kubernetes Kubelet Server
Documentation=https://github.com/kubernetes/kubernetes
After=docker.target

[Service]
EnvironmentFile=/etc/kubernetes/kubelet
ExecStart=/usr/bin/kubelet $KUBELET_ARGS
Restart=always

[Install]
WantedBy=multi-user.target


# /etc/kubernetes/kubelet
KUBELET_ARGS="--kubeconfig=/etc/kubernetes/kubeconfig --config=/etc/kubernetes/kubelet.config \
--hostname-override=node2 \
--container-runtime-endpoint=unix:///run/containerd/containerd.sock \
--v=0"


# /etc/kubernetes/kubelet.config
kind: KubeletConfiguration
apiVersion: kubelet.config.k8s.io/v1beta1
address: 0.0.0.0
port: 10250
cgroupDriver: cgroupfs
clusterDNS: ["10.244.0.100"]
clusterDomain: cluster.local
authentication:
  anonymous:
    enabled: true


systemctl status kubelet
systemctl restart kubelet && systemctl enable kubelet

systemctl start docker



# /usr/lib/systemd/system/kube-proxy.service
 [Unit]
Description=Kubernetes Kube-Proxy Server
Documentation=https://github.com/kubernetes/kubernetes
After=network.target

[Service]
EnvironmentFile=/etc/kubernetes/proxy
ExecStart=/usr/bin/kube-proxy $KUBE_PROXY_ARGS
Restart=always

[Install]
WantedBy=multi-user.target



# /etc/kubernetes/proxy
KUBE_PROXY_ARGS="--kubeconfig=/etc/kubernetes/kubeconfig \
--hostname-override=node1 \
--proxy-mode=iptables \
--v=0"

systemctl status kube-proxy
systemctl restart kube-proxy && systemctl enable kube-proxy


kubectl --kubeconfig=/etc/kubernetes/kubeconfig get nodes

kubectl config set-cluster kubernetes \
--certificate-authority=/etc/kubernetes/pki/ca.crt \
--embed-certs=true \
--server=https://node1_p:9443 \
--kubeconfig=qt-kubeconfig

kubectl config --kubeconfig=qt-kubeconfig set-credentials \
admin --client-certificate=/etc/kubernetes/pki/client.crt \
--client-key=/etc/kubernetes/pki/client.key \
--embed-certs=true

kubectl config --kubeconfig=qt-kubeconfig set-context qt-kubernetes \
--cluster=kubernetes --namespace=default --user=admin

kubectl config --kubeconfig=qt-kubeconfig use-context qt-kubernetes






